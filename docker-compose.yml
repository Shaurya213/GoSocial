services:
  mysql:
    image: mysql:8
    container_name: gosocial-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gosocial_test
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 10

  mongodb:
    image: mongo:7.0
    container_name: gosocial_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: gosocial
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 10

  mongo-express:
    image: mongo-express:latest
    container_name: gosocial_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      # Prefer single URL over piecemeal host/creds and avoid static IPs
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/?authSource=admin
      ME_CONFIG_BASICAUTH: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy

  media-server:
    build:
      context: .
      dockerfile: cmd/media-server/Dockerfile
    container_name: gosocial_media_server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # point to the service name, not a static IP
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USERNAME: admin
      MONGO_PASSWORD: admin123
      MONGO_DATABASE: gosocial
      MEDIA_SERVER_PORT: 8080
      MEDIA_BASE_URL: http://localhost:8080/media
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local
