// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/v1/chat.proto

package chat

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message format sent in chat
type ChatMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	SenderId       string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	SentAt         *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_api_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_api_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetSentAt() *timestamp.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

// Send a new message to a conversaiton
type SendMessageRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	SenderId       string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_api_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SendMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       *ChatMessage           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_api_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendMessageResponse) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetChatHistoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Limit          int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetChatHistoryRequest) Reset() {
	*x = GetChatHistoryRequest{}
	mi := &file_api_v1_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryRequest) ProtoMessage() {}

func (x *GetChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *GetChatHistoryRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetChatHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetChatHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatHistoryResponse) Reset() {
	*x = GetChatHistoryResponse{}
	mi := &file_api_v1_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryResponse) ProtoMessage() {}

func (x *GetChatHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetChatHistoryResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetChatHistoryResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_api_v1_chat_proto protoreflect.FileDescriptor

const file_api_v1_chat_proto_rawDesc = "" +
	"\n" +
	"\x11api/v1/chat.proto\x12\x06api.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa2\x01\n" +
	"\vChatMessage\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x123\n" +
	"\asent_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06sentAt\"t\n" +
	"\x12SendMessageRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"^\n" +
	"\x13SendMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12-\n" +
	"\amessage\x18\x02 \x01(\v2\x13.api.v1.ChatMessageR\amessage\"n\n" +
	"\x15GetChatHistoryRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"I\n" +
	"\x16GetChatHistoryResponse\x12/\n" +
	"\bmessages\x18\x01 \x03(\v2\x13.api.v1.ChatMessageR\bmessages2\xe7\x01\n" +
	"\vChatService\x12>\n" +
	"\x0eStreamMessages\x12\x13.api.v1.ChatMessage\x1a\x13.api.v1.ChatMessage(\x010\x01\x12G\n" +
	"\fSendMessages\x12\x1a.api.v1.SendMessageRequest\x1a\x1b.api.v1.SendMessageResponse\x12O\n" +
	"\x0eGetChatHistory\x12\x1d.api.v1.GetChatHistoryRequest\x1a\x1e.api.v1.GetChatHistoryResponseB\x0fZ\r./api/v1/chatb\x06proto3"

var (
	file_api_v1_chat_proto_rawDescOnce sync.Once
	file_api_v1_chat_proto_rawDescData []byte
)

func file_api_v1_chat_proto_rawDescGZIP() []byte {
	file_api_v1_chat_proto_rawDescOnce.Do(func() {
		file_api_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_chat_proto_rawDesc), len(file_api_v1_chat_proto_rawDesc)))
	})
	return file_api_v1_chat_proto_rawDescData
}

var file_api_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_v1_chat_proto_goTypes = []any{
	(*ChatMessage)(nil),            // 0: api.v1.ChatMessage
	(*SendMessageRequest)(nil),     // 1: api.v1.SendMessageRequest
	(*SendMessageResponse)(nil),    // 2: api.v1.SendMessageResponse
	(*GetChatHistoryRequest)(nil),  // 3: api.v1.GetChatHistoryRequest
	(*GetChatHistoryResponse)(nil), // 4: api.v1.GetChatHistoryResponse
	(*timestamp.Timestamp)(nil),    // 5: google.protobuf.Timestamp
}
var file_api_v1_chat_proto_depIdxs = []int32{
	5, // 0: api.v1.ChatMessage.sent_at:type_name -> google.protobuf.Timestamp
	0, // 1: api.v1.SendMessageResponse.message:type_name -> api.v1.ChatMessage
	0, // 2: api.v1.GetChatHistoryResponse.messages:type_name -> api.v1.ChatMessage
	0, // 3: api.v1.ChatService.StreamMessages:input_type -> api.v1.ChatMessage
	1, // 4: api.v1.ChatService.SendMessages:input_type -> api.v1.SendMessageRequest
	3, // 5: api.v1.ChatService.GetChatHistory:input_type -> api.v1.GetChatHistoryRequest
	0, // 6: api.v1.ChatService.StreamMessages:output_type -> api.v1.ChatMessage
	2, // 7: api.v1.ChatService.SendMessages:output_type -> api.v1.SendMessageResponse
	4, // 8: api.v1.ChatService.GetChatHistory:output_type -> api.v1.GetChatHistoryResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v1_chat_proto_init() }
func file_api_v1_chat_proto_init() {
	if File_api_v1_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_chat_proto_rawDesc), len(file_api_v1_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_chat_proto_goTypes,
		DependencyIndexes: file_api_v1_chat_proto_depIdxs,
		MessageInfos:      file_api_v1_chat_proto_msgTypes,
	}.Build()
	File_api_v1_chat_proto = out.File
	file_api_v1_chat_proto_goTypes = nil
	file_api_v1_chat_proto_depIdxs = nil
}
