// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: api/v1/notif.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages for SendNotification
type SendNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data          map[string]string      `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Channels      []string               `protobuf:"bytes,6,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{0}
}

func (x *SendNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendNotificationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SendNotificationRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendNotificationRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type SendNotificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NotificationId string                 `protobuf:"bytes,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{1}
}

func (x *SendNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

// Messages for ScheduleNotification
type ScheduleNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	ScheduledAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	Data          map[string]string      `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Channels      []string               `protobuf:"bytes,7,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleNotificationRequest) Reset() {
	*x = ScheduleNotificationRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNotificationRequest) ProtoMessage() {}

func (x *ScheduleNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNotificationRequest.ProtoReflect.Descriptor instead.
func (*ScheduleNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *ScheduleNotificationRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ScheduleNotificationRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type ScheduleNotificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NotificationId string                 `protobuf:"bytes,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScheduleNotificationResponse) Reset() {
	*x = ScheduleNotificationResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNotificationResponse) ProtoMessage() {}

func (x *ScheduleNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNotificationResponse.ProtoReflect.Descriptor instead.
func (*ScheduleNotificationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{3}
}

func (x *ScheduleNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScheduleNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScheduleNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

// Messages for GetUserNotifications
type GetUserNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	UnreadOnly    bool                   `protobuf:"varint,4,opt,name=unread_only,json=unreadOnly,proto3" json:"unread_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserNotificationsRequest) Reset() {
	*x = GetUserNotificationsRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationsRequest) ProtoMessage() {}

func (x *GetUserNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserNotificationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserNotificationsRequest) GetUnreadOnly() bool {
	if x != nil {
		return x.UnreadOnly
	}
	return false
}

type NotificationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	IsRead        bool                   `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Data          map[string]string      `protobuf:"bytes,9,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationData) Reset() {
	*x = NotificationData{}
	mi := &file_api_v1_notif_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationData) ProtoMessage() {}

func (x *NotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationData.ProtoReflect.Descriptor instead.
func (*NotificationData) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NotificationData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotificationData) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NotificationData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NotificationData) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Notifications []*NotificationData    `protobuf:"bytes,3,rep,name=notifications,proto3" json:"notifications,omitempty"`
	TotalCount    int32                  `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserNotificationsResponse) Reset() {
	*x = GetUserNotificationsResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationsResponse) ProtoMessage() {}

func (x *GetUserNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserNotificationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUserNotificationsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserNotificationsResponse) GetNotifications() []*NotificationData {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetUserNotificationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetUserNotificationsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserNotificationsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Messages for MarkAsRead
type MarkAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{7}
}

func (x *MarkAsReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *MarkAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MarkAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{8}
}

func (x *MarkAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkAsReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Messages for RegisterDevice
type RegisterDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceToken   string                 `protobuf:"bytes,2,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	Platform      string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterDeviceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterDeviceRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *RegisterDeviceRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type RegisterDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDeviceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Messages for SendFriendRequest
type SendFriendRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserId    string                 `protobuf:"bytes,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      string                 `protobuf:"bytes,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	FromUsername  string                 `protobuf:"bytes,3,opt,name=from_username,json=fromUsername,proto3" json:"from_username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendRequestRequest) Reset() {
	*x = SendFriendRequestRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestRequest) ProtoMessage() {}

func (x *SendFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{11}
}

func (x *SendFriendRequestRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *SendFriendRequestRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *SendFriendRequestRequest) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

type SendFriendRequestResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NotificationId string                 `protobuf:"bytes,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendFriendRequestResponse) Reset() {
	*x = SendFriendRequestResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestResponse) ProtoMessage() {}

func (x *SendFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{12}
}

func (x *SendFriendRequestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendFriendRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendFriendRequestResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

// Health Check Messages
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_v1_notif_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{13}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_v1_notif_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_notif_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_notif_proto_rawDescGZIP(), []int{14}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_api_v1_notif_proto protoreflect.FileDescriptor

const file_api_v1_notif_proto_rawDesc = "" +
	"\n" +
	"\x12api/v1/notif.proto\x12\bnotif.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8c\x02\n" +
	"\x17SendNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12?\n" +
	"\x04data\x18\x05 \x03(\v2+.notif.v1.SendNotificationRequest.DataEntryR\x04data\x12\x1a\n" +
	"\bchannels\x18\x06 \x03(\tR\bchannels\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"w\n" +
	"\x18SendNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x0fnotification_id\x18\x03 \x01(\tR\x0enotificationId\"\xd3\x02\n" +
	"\x1bScheduleNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12=\n" +
	"\fscheduled_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12C\n" +
	"\x04data\x18\x06 \x03(\v2/.notif.v1.ScheduleNotificationRequest.DataEntryR\x04data\x12\x1a\n" +
	"\bchannels\x18\a \x03(\tR\bchannels\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"{\n" +
	"\x1cScheduleNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x0fnotification_id\x18\x03 \x01(\tR\x0enotificationId\"\x81\x01\n" +
	"\x1bGetUserNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vunread_only\x18\x04 \x01(\bR\n" +
	"unreadOnly\"\x81\x03\n" +
	"\x10NotificationData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x17\n" +
	"\ais_read\x18\x06 \x01(\bR\x06isRead\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x128\n" +
	"\x04data\x18\t \x03(\v2$.notif.v1.NotificationData.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdf\x01\n" +
	"\x1cGetUserNotificationsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\rnotifications\x18\x03 \x03(\v2\x1a.notif.v1.NotificationDataR\rnotifications\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\"U\n" +
	"\x11MarkAsReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"H\n" +
	"\x12MarkAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"o\n" +
	"\x15RegisterDeviceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fdevice_token\x18\x02 \x01(\tR\vdeviceToken\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\"L\n" +
	"\x16RegisterDeviceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x7f\n" +
	"\x18SendFriendRequestRequest\x12 \n" +
	"\ffrom_user_id\x18\x01 \x01(\tR\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x02 \x01(\tR\btoUserId\x12#\n" +
	"\rfrom_username\x18\x03 \x01(\tR\ffromUsername\"x\n" +
	"\x19SendFriendRequestResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x0fnotification_id\x18\x03 \x01(\tR\x0enotificationId\"\x14\n" +
	"\x12HealthCheckRequest\"\x81\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp2\x86\x05\n" +
	"\x13NotificationService\x12Y\n" +
	"\x10SendNotification\x12!.notif.v1.SendNotificationRequest\x1a\".notif.v1.SendNotificationResponse\x12e\n" +
	"\x14ScheduleNotification\x12%.notif.v1.ScheduleNotificationRequest\x1a&.notif.v1.ScheduleNotificationResponse\x12e\n" +
	"\x14GetUserNotifications\x12%.notif.v1.GetUserNotificationsRequest\x1a&.notif.v1.GetUserNotificationsResponse\x12G\n" +
	"\n" +
	"MarkAsRead\x12\x1b.notif.v1.MarkAsReadRequest\x1a\x1c.notif.v1.MarkAsReadResponse\x12S\n" +
	"\x0eRegisterDevice\x12\x1f.notif.v1.RegisterDeviceRequest\x1a .notif.v1.RegisterDeviceResponse\x12\\\n" +
	"\x11SendFriendRequest\x12\".notif.v1.SendFriendRequestRequest\x1a#.notif.v1.SendFriendRequestResponse\x12J\n" +
	"\vHealthCheck\x12\x1c.notif.v1.HealthCheckRequest\x1a\x1d.notif.v1.HealthCheckResponseB\x11Z\x0fgosocial/api/v1b\x06proto3"

var (
	file_api_v1_notif_proto_rawDescOnce sync.Once
	file_api_v1_notif_proto_rawDescData []byte
)

func file_api_v1_notif_proto_rawDescGZIP() []byte {
	file_api_v1_notif_proto_rawDescOnce.Do(func() {
		file_api_v1_notif_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_notif_proto_rawDesc), len(file_api_v1_notif_proto_rawDesc)))
	})
	return file_api_v1_notif_proto_rawDescData
}

var file_api_v1_notif_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_v1_notif_proto_goTypes = []any{
	(*SendNotificationRequest)(nil),      // 0: notif.v1.SendNotificationRequest
	(*SendNotificationResponse)(nil),     // 1: notif.v1.SendNotificationResponse
	(*ScheduleNotificationRequest)(nil),  // 2: notif.v1.ScheduleNotificationRequest
	(*ScheduleNotificationResponse)(nil), // 3: notif.v1.ScheduleNotificationResponse
	(*GetUserNotificationsRequest)(nil),  // 4: notif.v1.GetUserNotificationsRequest
	(*NotificationData)(nil),             // 5: notif.v1.NotificationData
	(*GetUserNotificationsResponse)(nil), // 6: notif.v1.GetUserNotificationsResponse
	(*MarkAsReadRequest)(nil),            // 7: notif.v1.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),           // 8: notif.v1.MarkAsReadResponse
	(*RegisterDeviceRequest)(nil),        // 9: notif.v1.RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil),       // 10: notif.v1.RegisterDeviceResponse
	(*SendFriendRequestRequest)(nil),     // 11: notif.v1.SendFriendRequestRequest
	(*SendFriendRequestResponse)(nil),    // 12: notif.v1.SendFriendRequestResponse
	(*HealthCheckRequest)(nil),           // 13: notif.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),          // 14: notif.v1.HealthCheckResponse
	nil,                                  // 15: notif.v1.SendNotificationRequest.DataEntry
	nil,                                  // 16: notif.v1.ScheduleNotificationRequest.DataEntry
	nil,                                  // 17: notif.v1.NotificationData.DataEntry
	(*timestamppb.Timestamp)(nil),        // 18: google.protobuf.Timestamp
}
var file_api_v1_notif_proto_depIdxs = []int32{
	15, // 0: notif.v1.SendNotificationRequest.data:type_name -> notif.v1.SendNotificationRequest.DataEntry
	18, // 1: notif.v1.ScheduleNotificationRequest.scheduled_at:type_name -> google.protobuf.Timestamp
	16, // 2: notif.v1.ScheduleNotificationRequest.data:type_name -> notif.v1.ScheduleNotificationRequest.DataEntry
	18, // 3: notif.v1.NotificationData.created_at:type_name -> google.protobuf.Timestamp
	18, // 4: notif.v1.NotificationData.updated_at:type_name -> google.protobuf.Timestamp
	17, // 5: notif.v1.NotificationData.data:type_name -> notif.v1.NotificationData.DataEntry
	5,  // 6: notif.v1.GetUserNotificationsResponse.notifications:type_name -> notif.v1.NotificationData
	18, // 7: notif.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 8: notif.v1.NotificationService.SendNotification:input_type -> notif.v1.SendNotificationRequest
	2,  // 9: notif.v1.NotificationService.ScheduleNotification:input_type -> notif.v1.ScheduleNotificationRequest
	4,  // 10: notif.v1.NotificationService.GetUserNotifications:input_type -> notif.v1.GetUserNotificationsRequest
	7,  // 11: notif.v1.NotificationService.MarkAsRead:input_type -> notif.v1.MarkAsReadRequest
	9,  // 12: notif.v1.NotificationService.RegisterDevice:input_type -> notif.v1.RegisterDeviceRequest
	11, // 13: notif.v1.NotificationService.SendFriendRequest:input_type -> notif.v1.SendFriendRequestRequest
	13, // 14: notif.v1.NotificationService.HealthCheck:input_type -> notif.v1.HealthCheckRequest
	1,  // 15: notif.v1.NotificationService.SendNotification:output_type -> notif.v1.SendNotificationResponse
	3,  // 16: notif.v1.NotificationService.ScheduleNotification:output_type -> notif.v1.ScheduleNotificationResponse
	6,  // 17: notif.v1.NotificationService.GetUserNotifications:output_type -> notif.v1.GetUserNotificationsResponse
	8,  // 18: notif.v1.NotificationService.MarkAsRead:output_type -> notif.v1.MarkAsReadResponse
	10, // 19: notif.v1.NotificationService.RegisterDevice:output_type -> notif.v1.RegisterDeviceResponse
	12, // 20: notif.v1.NotificationService.SendFriendRequest:output_type -> notif.v1.SendFriendRequestResponse
	14, // 21: notif.v1.NotificationService.HealthCheck:output_type -> notif.v1.HealthCheckResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_v1_notif_proto_init() }
func file_api_v1_notif_proto_init() {
	if File_api_v1_notif_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_notif_proto_rawDesc), len(file_api_v1_notif_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_notif_proto_goTypes,
		DependencyIndexes: file_api_v1_notif_proto_depIdxs,
		MessageInfos:      file_api_v1_notif_proto_msgTypes,
	}.Build()
	File_api_v1_notif_proto = out.File
	file_api_v1_notif_proto_goTypes = nil
	file_api_v1_notif_proto_depIdxs = nil
}
